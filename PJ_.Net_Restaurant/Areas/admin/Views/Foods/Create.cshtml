@using PJ_.Net_Restaurant.Help
@model PJ_.Net_Restaurant.Models.Food

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/admin/Views/Shared/_MyLayout.cshtml";
}

<style>
    .image-container-css {
        width: 160px;
        height: 160px;
        background-size: cover;
        background-position: center;
    }
</style>

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-green">
            <div class="panel-heading">
                Thêm mới Món
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("Create", "Foods", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            <input type="file" name="img" id="image-input" accept=".jpg,.png,.gif,.jpeg,.bmp" />
                        </div>
                        <div id="image-container" class="col-md-4"></div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Tên món", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("Giá", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("Giảm giá (%)", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.discountprice, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
                            @Html.ValidationMessageFor(model => model.discountprice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.describe, new {@class = "form-control", @rows = 3 })
                            @Html.ValidationMessageFor(model => model.describe, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Tags", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.type, new List<SelectListItem>
                            {
                                new SelectListItem { Text = "NEW", Value = "NEW" },
                                new SelectListItem { Text = "SPECIAL", Value = "SPECIAL" },
                                new SelectListItem { Text = "SEASONAL", Value = "SEASONAL" },
                            }, "Chọn Tags cho món", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("Kiểu món", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.footstyle, (IEnumerable<SelectListItem>)ViewBag.FoodStyleItems, "Chọn kiểu món", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.footstyle, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("Vị trí", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.order, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.order, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @{
                                    bool hide = true;
                                }
                                @Html.CheckBoxFor(model => hide)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Thêm" class="btn btn-success" />
                        </div>
                    </div>
                </div>
                }
                <div>
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-triangle-left'></span>", "Quay lại", "Index", "Foods", htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                </div>
            </div>
        </div>
    </div>
</div>

@section _Footer
{
    <script>
        $(function () {
            $("#name").keyup(function () {
                var text = $.trim($(this).val().toLowerCase());
                var text_create;
                text_create = text.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a").replace(/\ /g, '-').replace(/đ/g, "d").replace(/đ/g, "d").replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y").replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u").replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ.+/g, "o").replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ.+/g, "e").replace(/ì|í|ị|ỉ|ĩ/g, "i");
                $('#meta').val(text_create);
            }).keyup();
        });
    </script>

    <script>
        const imageInput = document.getElementById('image-input');
        const imageContainer = document.getElementById('image-container');

        imageInput.addEventListener('change', function () {
            const file = this.files[0];

            if (file) {
                const reader = new FileReader();

                reader.addEventListener('load', function () {
                    imageContainer.style.backgroundImage = `url(${this.result})`;
                    imageContainer.classList.add('image-container-css');
                });

                reader.readAsDataURL(file);
            }
        });
    </script>
}